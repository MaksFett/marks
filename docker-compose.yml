version: '3.8'

x-common-variables: &common-variables
  MYSQL_DATABASE: $MYSQL_DATABASE
  MYSQL_USER: $MYSQL_USER
  MYSQL_PASSWORD: $MYSQL_PASSWORD

services:
  db:
    image: mysql
    restart: always
    cap_add:
      - SYS_NICE
    volumes:
      - mysql_data:/var/lib/mysql
      - ./user-server/users-setup.sql:/docker-entrypoint-initdb.d/setup_1.sql
      - ./main-server/students-setup.sql:/docker-entrypoint-initdb.d/setup_2.sql
      - ./main-server/subjects-setup.sql:/docker-entrypoint-initdb.d/setup_3.sql
      - ./main-server/marks-setup.sql:/docker-entrypoint-initdb.d/setup_4.sql

    ports:
      - "9906:3306"
    environment:
      <<: *common-variables
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      MYSQL_HOST: $MYSQL_HOST

  nginx:
    depends_on:
      - user_api
      - main_api
      - client
    restart: always
    build:
      dockerfile: ./nginx/DockerfileDev
      context: .
    ports:
      - "8008:80"

  main_api:
    build:
      context: ./main-server
      target: dev
    depends_on:
      - db
    volumes:
      - ./main-server:/src
      - /src/node_modules
    command: npm run start:dev
    ports:
      - $MAIN_API_PORT:$MAIN_API_PORT
    environment:
      <<: *common-variables
      PORT: $MAIN_API_PORT
      JWT_SECRET: $JWT_SECRET
      NODE_ENV: development

  user_api:
    build:
      context: ./user-server
      target: dev
    depends_on:
      - db
    volumes:
      - ./user-server:/src
      - /src/node_modules
    command: npm run start:dev
    ports:
      - $USER_API_PORT:$USER_API_PORT
    environment:
      <<: *common-variables
      PORT: $USER_API_PORT
      NODE_ENV: development
      JWT_SECRET: $JWT_SECRET
      JWT_REFRESH_SECRET: $JWT_REFRESH_SECRET
  
  client:
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    build:
      context: ./client
    volumes:
      - ./client:/src
      - /src/node_modules
    ports:
      - $CLIENT_PORT:$CLIENT_PORT
  
  adminer:
    image: adminer:latest
    restart: unless-stopped
    ports:
      - 8080:8080
    depends_on:
      - db
    environment:
      ADMINER_DEFAULT_SERVER: db

volumes:
  mysql_data:
